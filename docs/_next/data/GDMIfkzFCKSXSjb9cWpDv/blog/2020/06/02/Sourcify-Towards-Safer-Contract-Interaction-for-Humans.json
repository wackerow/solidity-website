{"pageProps":{"frontmatter":{"layout":"post","published":true,"title":"Sourcify: Towards Safer Contract Interaction for Humans","date":"2020-06-02","author":"Edi Sinovƒçiƒá, Franziska Heintel","category":"Announcements"},"content":"\n**tl;dr**: Building sensible blockchain applications for humans is **hard**. You can enhance the user experience of\nyour dapp today by leveraging the power of open source. Increase awareness and give more transparency on what users\nare _actually_ doing when interacting with your code on the blockchain, i.e. when signing a transaction, by publishing\nthe source code to this decentralized repository and using metadata files, which translate ‚Äúrandom‚Äù hex strings into\nhuman-readable language. Sourcify is a tool to help you do exactly that. If you want to upload your source code, either visit [verification.komputing.org](https://verification.komputing.org/), the [Sourcify Github repo](https://github.com/ethereum/sourcify) or use the Sourcify\nplugin in Remix. And, to learn how Sourcify works and why it matters, simply keep on reading.\n\nYou might already know Sourcify under the name ‚ÄúSource-Verify‚Äù/ ‚ÄùSource-Verifier‚Äù - don‚Äôt despair, we just decided to give\nit a nicer name!\n\n## YOLO Signing - One of Today‚Äôs Everyday Problems in Ethereum UX üôàüìùüß®\n\nThink about the following: How many developers of the dapps you are using do you know personally?\n\nLet‚Äôs imagine you want to interact with a dapp using MetaMask and it shows you this dialogue:\n\n![Yolo Signing](/img/2020/05/MetaMask_Yolosign.png)\n\n_You Only Live Once (YOLO)‚Ää Signing - confirm at your peril_\n\nWhat does all that hex data mean? You basically have no idea what you are agreeing to‚Ää - but you only live once, right?\nDo you reject or confirm? If you go ahead and sign, you are **YOLO signing**. YOLO signing is bad because even if you only\nlive once, you can probably regret some stuff forever! ;)\n\nBy confirming, you blindly trust the developers of this dapp that it will do what they promised. And while it‚Äôs great to\nhave faith in humanity, it‚Äôs even greater to have the option to verify what is happening and take an informed decision.\n\n## Source Verification & NatSpec to the Rescue\n\nTo prevent your users from having to blindly trust you and YOLO sign, you, as a dapp developer, can verify your code.\n\nBy verifying and uploading your code, you allow any other developer to recompile the source code and check it for themselves.\n\nProperly ‚Äúverifying‚Äù your code involves two steps:\n\n1. Commenting the code using [NatSpec](https://solidity.readthedocs.io/en/latest/natspec-format.html). NatSpec is the\n   Ethereum Natural Language Specification Format which describes functions, return values etc. in a friendly way.\n1. Publishing the dapp‚Äôs source code and its metadata to a decentralized network.\n\n## Meet Sourcify, a decentralized automated contract verifying service üìùüîç‚úîÔ∏è\n\nSourcify tries to make the process of source verification (step 2 in the list above) easy and transparent. There are different ways\nhow you can make use of the tool.\n\nYou can either...\n\n- Use the interface hosted on [verification.komputing.org](https://verification.komputing.org/)\n- Use [Remix](https://remix.ethereum.org/) plugins (we‚Äôll show you a play by play in one of the following posts!)\n- Publish each source code file and the metadata file to [IPFS](https://docs.ipfs.io/concepts/what-is-ipfs/) manually\n  (Sourcify will then pick it up automatically around the time of deployment)\n- [Run](https://github.com/ethereum/sourcify) Sourcify yourself\n\n## How does Sourcify work under the hood? üìñ\n\nSourcify is a project on the Ethereum blockchain that:\n\n- Listens for the deployment of smart contracts.\n- Checks to see if their metadata and source code is published on IPFS or Swarm.\n- Recompiles the code.\n- Checks that it is the same as the deployed code.\n- Permanently stores the source code, ABI and other metadata on IPFS.\n\n![Sourcify Flowchart](/img/2020/05/Sourcify_Flowchart.png)\n\n_Sourcify Verification Flow_\n\nSourcify has a monitoring service that listens to new blocks which are mined on an Ethereum blockchain. Currently it is\nmonitoring the Ethereum mainnet and the Rinkeby and Goerli testnets.\n\nIt takes the transactions in the blocks, derives their bytecode metadata and tries to find links in the data that go to\neither IPFS or Swarm for the source contracts and metadata files.\n\nSubsequently, it tries to fetch the files. If that is successful, the retrieved files are sent to the verifier which\nattempts to recompile the code and checks that it is the same as the deployed code. If everything went well and recompiled\nmetadata and code are a match, all of it gets indexed, pinned and stored (in a public decentralized system, currently IPFS).\n\nAnd if you‚Äôd like to verify the verifier, no problem: Simply take the files from IPFS and recompile them yourself -\nthe necessary compiler options are also stored in the system.\n\n## Verify all the Sources - Are we there yet? ‚õÖ\n\n**The bad news:** The road towards a more secure, more aware, educated and trustless UX for Ethereum dapps is certainly\nstill long.\n\n**The good news:** There are many things we can do _right now_ to contribute towards it!\n\nWhat dapp developers can do:\n\n- Use NatSpec to comment your code\n- Upload your source code using Sourcify\n\nWhat the broader Ethereum community can do:\n\n- Expand NatSpec\n- Implement NatSpec into wallets\n- Give wallets confidence in the source of the NatSpec (e.g. via Sourcify)\n- Implement wallet support for Sourcify\n- Support dapp devs to use NatSpec, metadata, Sourcify by extending the developer tooling around it (e.g. help with\n  auto-publishing tools)\n\nWith [Version 0.6.8](https://github.com/ethereum/solidity/releases/tag/v0.6.8), Solidity added a recommendation to use\nSPDX license identifiers for all source files, which is also stored in the contract metadata. This change helps tools like\nSourcify as well as deployment tools by enabling them to check for open source licenses before uploading the code.\n\nWe hope you enjoyed this first high level introduction into why source verification matters and how it could work. Feel\nfree to reach out to us with any question you might have and stay tuned for more content to follow soon.\n\n---\n\nFollow Sourcify on [Twitter](https://twitter.com/SourcifyEth).\n\nChat with us on [Gitter](https://gitter.im/ethereum/source-verify).\n\nCheck out the Sourcify code on [Github](https://github.com/ethereum/sourcify).\n\nBrowse the verified contracts [here](https://contractrepo.komputing.org/).\n","availableURLs":["/2023/05/10/solidity-0.8.20-release-announcement","/2023/03/10/solidity-developer-survey-2022-results","/2023/02/22/user-defined-operators","/2023/02/22/solidity-0.8.19-release-announcement","/2023/02/01/solidity-0.8.18-release-announcement","/2022/12/07/solidity-developer-survey-2022-announcement","/2022/12/05/solidity-core-team-updates","/2022/09/08/storage-write-removal-before-conditional-termination","/2022/09/08/solidity-0.8.17-release-announcement","/2022/08/08/solidity-0.8.16-release-announcement","/2022/08/08/calldata-tuple-reencoding-head-overflow-bug","/2022/06/15/solidity-0.8.15-release-announcement","/2022/06/15/inline-assembly-memory-side-effects-bug","/2022/06/15/dirty-bytes-array-to-storage-bug","/2022/05/17/solidity-0.8.14-release-announcement","/2022/05/17/data-location-inheritance-bug","/2022/05/17/calldata-reencode-size-check-bug","/2022/05/03/solidity-summit-2022-recap","/2022/04/08/announcing-the-underhanded-contest-winners-2022","/2022/03/16/solidity-0.8.13-release-announcement","/2022/03/16/encodecall-bug","/2022/02/22/solidity-summit-2022-announcement","/2022/02/16/solidity-0.8.12-release-announcement","/2022/02/09/underhanded-solidity-contest-2022-announcement","/2022/02/07/solidity-developer-survey-2021-results","/2021/12/20/solidity-0.8.11-release-announcement","/2021/11/18/solidity-developer-survey-2021","/2021/11/09/solidity-0.8.10-release-announcement","/2021/09/29/user-defined-value-types-bug","/2021/09/29/solidity-0.8.9-release-announcement","/2021/09/29/signed-immutables-bug","/2021/09/27/user-defined-value-types","/2021/09/27/solidity-0.8.8-release-announcement","/2021/08/11/solidity-0.8.7-release-announcement","/2021/06/22/solidity-0.8.6-release-announcement","/2021/06/10/solidity-0.8.5-release-announcement","/2021/05/03/soliditylangorg-umbrella-domain","/2021/04/21/solidity-0.8.4-release-announcement","/2021/04/21/decoding-from-memory-bug","/2021/04/21/custom-errors","/2021/04/01/announcing-solidity-collectibles","/2021/03/23/solidity-0.8.3-release-announcement","/2021/03/23/keccak-optimizer-bug","/2021/03/02/solidity-0.8.2-release-announcement","/2021/03/02/saving-gas-with-simple-inliner","/2021/02/15/contributing-to-solidity-101","/2021/02/10/an-introduction-to-soliditys-fuzz-testing-approach","/2021/02/01/launching-the-solidity-forum","/2021/01/27/solidity-0.8.1-release-announcement","/2021/01/26/solidity-developer-survey-2020-results","/2020/12/16/solidity-v0.8.0-release-announcement","/2020/12/16/solidity-0.7.6-release-announcement","/2020/12/09/solidity-developer-survey-2020","/2020/12/03/solidity-underhanded-contest-winners","/2020/11/18/solidity-0.7.5-release-announcement","/2020/11/04/solidity-ama-1-recap","/2020/10/28/solidity-0.8.x-preview","/2020/10/19/solidity-0.7.4-release-announcement","/2020/10/19/empty-byte-array-copy-bug","/2020/10/07/solidity-dynamic-array-cleanup-bug","/2020/10/07/solidity-0.7.3-release-announcement","/2020/09/28/solidity-0.7.2-release-announcement","/2020/09/21/solidity-underhanded-contest","/2020/09/18/meet-the-team","/2020/09/02/solidity-0.7.1-release-announcement","/2020/07/28/solidity-v0.7.0-release-announcement","/2020/07/22/Solidity-0612-release-announcement","/2020/07/08/solidity-turns-5","/2020/07/07/Solidity-0611-release-announcement","/2020/06/25/sourcify-faq","/2020/06/18/solidity-0.6-inheritance","/2020/06/11/Solidity-0610-release-announcement","/2020/06/09/solidity-summit-recap","/2020/06/05/Solidity-069-release-announcement","/2020/06/02/Sourcify-Towards-Safer-Contract-Interaction-for-Humans","/2020/05/26/array-slices","/2020/05/14/Solidity-068-release-announcement","/2020/05/13/immutable-keyword","/2020/05/04/solidity-0.6.7-release-announcement","/2020/04/17/Solidity-Summit-2020-Goes-Interspace","/2020/04/09/solidity-0.6.6-release-announcement","/2020/04/06/solidity-0.6.5-release-announcement","/2020/04/06/memory-creation-overflow-bug","/2020/03/23/fallback-receive-split","/2020/03/17/solidity-0.5.17-release-announcement","/2020/03/10/solidity-0.6.4-release-announcement","/2020/02/18/solidity-0.6.3-release-announcement","/2020/01/29/solidity-0.6-try-catch","/2020/01/27/solidity-0.6.2-release-announcement","/2020/01/02/solidity-0.6.1-release-announcement","/2020/01/02/solidity-0.5.16-release-announcement","/2019/12/17/solidity-0.6.0-release-announcement","/2019/12/17/solidity-0.5.15-release-announcement","/2019/12/09/solidity-0.5.14-release-announcement","/2019/11/14/solidity-0.5.13-release-announcement","/2019/10/01/solidity-0.5.12-release-announcement","/2019/08/12/solidity-0.5.11-release-announcement","/2019/06/25/solidity-storage-array-bugs","/2019/06/25/solidity-0.5.10-release-announcement","/2019/05/28/solidity-0.5.9-release-announcement","/2019/04/30/solidity-0.5.8-release-announcement","/2019/04/29/solidity-0.4.26-release-announcement","/2019/03/26/solidity-optimizer-and-abiencoderv2-bug","/2019/03/26/solidity-0.5.7-release-announcement","/2019/03/13/solidity-0.5.6-release-announcement","/2019/03/05/solidity-0.5.5-release-announcement","/2019/02/12/solidity-0.5.4-release-announcement","/2019/01/22/solidity-0.5.3-release-announcement","/2018/12/19/solidity-0.5.2-release-announcement","/2018/12/03/solidity-0.5.1-release-announcement","/2018/11/13/solidity-0.5.0-release-announcement","/2018/09/13/solidity-bugfix-release","/2018/09/13/solidity-0.4.25-release-announcement","/2018/05/16/solidity-0.4.24-release-announcement","/2018/04/19/solidity-0.4.23-release-announcement","/2018/04/17/solidity-0.4.22-release-announcement","/2018/03/08/solidity-0.4.21-release-announcement","/2018/02/14/solidity-0.4.20-release-announcement","/2017/11/30/solidity-0.4.19-release-announcement","/2017/10/18/solidity-0.4.18-release-announcement","/2017/09/21/solidity-0.4.17-release-announcement","/2017/08/24/solidity-0.4.16-release-announcement","/2017/08/08/solidity-0.4.15-release-announcement","/2017/07/31/solidity-0.4.14-release-announcement","/2017/07/06/solidity-0.4.13-release-announcement","/2017/07/03/solidity-0.4.12-release-announcement","/2017/05/03/solidity-optimizer-bug","/2017/05/03/solidity-0.4.11-release-announcement","/2017/03/15/solidity-0.4.10-release-announcement","/2017/01/31/solidity-0.4.9-release-announcement","/2017/01/13/solidity-0.4.8-release-announcement","/2016/12/15/solidity-0.4.7-release-announcement","/2016/11/22/solidity-0.4.6-release-announcement","/2016/11/21/solidity-0.4.5-release-announcement","/2016/11/09/analysis-storage-corruption-bug","/2016/11/01/solidity-0.4.4-release-announcement","/2016/11/01/security-alert-solidity-variables-can-overwritten-storage","/2016/10/25/solidity-0.4.3-release-announcement","/2016/09/17/solidity-0.4.2-release-announcement","/2016/09/09/solidity-0.4.1-release-announcement","/2016/09/08/solidity-0.4.0-release-announcement","/2016/09/01/formal-methods-roadmap","/2016/08/10/solidity-0.3.6-release-announcement","/2016/06/10/solidity-0.3.5-release-announcement","/2016/06/10/smart-contract-security","/2016/05/31/solidity-0.3.4-release-announcement","/2016/05/27/solidity-0.3.3-release-announcement","/2016/04/18/solidity-0.3.2-release-announcement","/2016/03/31/solidity-0.3.1-release-announcement","/2016/03/11/solidity-0.3.0-release-announcement","/2016/02/17/solidity-0.2.2-release-announcement","/2016/01/30/solidity-0.2.1-release-announcement","/2015/12/01/solidity-0.2.0-release-announcement","/2015/11/17/solidity-0.1.7-release-announcement","/2015/10/16/solidity-0.1.6-release-announcement","/2015/10/07/solidity-0.1.5-release-announcement","/2015/09/30/solidity-0.1.4-release-announcement","/2015/09/22/solidity-0.1.3-release-announcement","/2015/08/21/solidity-0.1.2-release-announcement"]},"__N_SSG":true}