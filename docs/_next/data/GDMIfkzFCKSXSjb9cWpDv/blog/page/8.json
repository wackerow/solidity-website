{"pageProps":{"allPostsData":[{"frontmatter":{"layout":"post","published":true,"title":"Solidity 0.6.10 Release Announcement","date":"2020-06-11","author":"Solidity Team","category":"Releases"},"content":"\nSolidity v0.6.10 fixes an important bug that was introduced in the previous release and adds error codes.\n\nPlease upgrade if you are using internal library functions with calldata parameters in connection with using for.\n\nImportant Bugfixes\n\nInvalid Access for Calldata Parameters in Internal Library Functions\n\nProblem: The previous release, Solidity 0.6.9, introduced the possibility to use calldata types in internal and not, as previously, only in external functions.\nThis resulted in a bug related to calling library functions with calldata parameters via using for.\nMore specifically,...","url":"/blog/2020/06/11/Solidity-0610-release-announcement"},{"frontmatter":{"layout":"post","published":true,"title":"Wrapping up the Virtual Solidity Summit 2020","date":"2020-06-09","author":"Franziska Heintel","category":"Announcements"},"content":"\nRoughly one month ago, we held the first Solidity Summit - a free interactive forum with discussions and talks on Solidity, Yul, language design and tooling. It took place on April 29-30 and was powered by a virtual meeting infrastructure based on open-source, self-hosted Jitsi video chat rooms. The platform was supplied by Interspace.Chat.\n\nBefore we dive into the recap: Your input and active participation was much appreciated and we want to take this opportunity to say thank you! We hope...","url":"/blog/2020/06/09/solidity-summit-recap"},{"frontmatter":{"layout":"post","published":true,"title":"Solidity 0.6.9 Release Announcement","date":"2020-06-05","author":"Solidity Team","category":"Releases"},"content":"\nSolidity v0.6.9 adds SMT-checking to solc-js,\nallows calldata for all variables and provides a mechanism to specify an import directory.\n\nPlease note that the solc-js / soljson binary includes the Z3 SMT solver built-in, which causes an increase in the binary size.\n\nNotable New Features\n\nSMTChecker\n\nThe SMTChecker is a component of the Solidity compiler which has been in development for quite some time now.\n\nIts aim is to bring formal verification methods to the Solidity compiler. Solidity implements a formal verification approach based on SMT/Horn...","url":"/blog/2020/06/05/Solidity-069-release-announcement"},{"frontmatter":{"layout":"post","published":true,"title":"Sourcify: Towards Safer Contract Interaction for Humans","date":"2020-06-02","author":"Edi Sinovčić, Franziska Heintel","category":"Announcements"},"content":"\ntl;dr: Building sensible blockchain applications for humans is hard. You can enhance the user experience of\nyour dapp today by leveraging the power of open source. Increase awareness and give more transparency on what users\nare actually doing when interacting with your code on the blockchain, i.e. when signing a transaction, by publishing\nthe source code to this decentralized repository and using metadata files, which translate “random” hex strings into\nhuman-readable language. Sourcify is a tool to help you do exactly that. If you...","url":"/blog/2020/06/02/Sourcify-Towards-Safer-Contract-Interaction-for-Humans"},{"frontmatter":{"layout":"post","published":true,"title":"Solidity 0.6.x features: Array Slices","date":"2020-05-26","author":"Solidity Team","category":"Explainers"},"content":"\nStarting from version 0.6.0, Solidity supports array slices.\nArray slices are handy when you want to reference a\ncontiguous portion of an array but do not want to perform a full copy of that portion. For now, array slices are only\nsupported for calldata arrays.\n\nHow to use Array Slices\n\nThe expression x[start:end] references a portion of the calldata array x starting at index start and ending just\nbefore index end.\n\nBoth start and end are optional. If not provided, start defaults to 0 and end defaults...","url":"/blog/2020/05/26/array-slices"},{"frontmatter":{"layout":"post","published":true,"title":"Solidity 0.6.8 Release Announcement","date":"2020-05-14","author":"Solidity Team","category":"Releases"},"content":"\nSolidity v0.6.8 fixes three important bugs in the code generator and introduces a recommendation to use SPDX license identifiers. Furthermore, support for WebAssembly has been extended and it is now possible to access the min and max values of an integer type directly.\n\nPlease upgrade if you are using array slices, backslashes in string literals for ABIEncoderV2 or are concerned about non-payable constructors.\n\nImportant Bugfixes\n\nPlease note that the three bugs outlined below have all been rated with a severity level of \"very...","url":"/blog/2020/05/14/Solidity-068-release-announcement"},{"frontmatter":{"layout":"post","published":true,"title":"Solidity 0.6.x features: Saving Storage Costs with Immutables","date":"2020-05-13","author":"Daniel Kirchner","category":"Explainers"},"content":"\nWith version 0.6.5, Solidity introduced the\nimmutable keyword\nfor state variables. Immutable state variables can only be assigned during contract creation, but will remain\nconstant throughout the life-time of a deployed contract.\nThe big advantage of immutables is that reading them is significantly cheaper than reading from regular state variables,\nsince immutables will not be stored in storage, but their values will be directly inserted into the runtime code.\n\nHow to use Immutables\n\nImmutable state variables can be declared using the immutable keyword. They cannot be read...","url":"/blog/2020/05/13/immutable-keyword"},{"frontmatter":{"layout":"post","published":true,"title":"Solidity 0.6.7 Release Announcement","date":"2020-05-04","author":"Solidity Team","category":"Releases"},"content":"\nSolidity v0.6.7 introduces support for EIP-165 via type(InterfaceName).interfaceId.\n\nLanguage Features:\n\nAdd support for EIP 165 interface identifiers with type(I).interfaceId.\nAllow virtual modifiers inside abstract contracts to have empty body.\n\nCompiler Features:\n\nOptimizer: Simplify repeated AND and OR operations.\nOption to specify optimization steps to be performed by Yul optimizer with yul-optimizations in the commandline interface or optimizer.details.yulDetails.optimizerSteps in standard-json.\nStandard Json Input: Support the prefix file:// in the field urls.\n\nBugfixes:\n\nSMTChecker: Fix internal error when fixed points are used.\nSMTChecker: Fix internal error when using array slices.\nType Checker: Disallow...","url":"/blog/2020/05/04/solidity-0.6.7-release-announcement"},{"frontmatter":{"layout":"post","published":true,"title":"Solidity Summit 2020 Goes Interspace","date":"2020-04-17","author":"Franziska Heintel","category":"Announcements"},"content":"\nTl;dr: As already announced on Twitter, we transformed the Solidity Summit, which was initially planned to be an in-person meeting in Berlin, into an online event. Today, we are excited to share that the summit will be powered by Interspace.Chat. Interspace is a virtual meeting infrastructure based on self-hosted Jitsi video chat rooms. Check out the Solidity Summit's preliminary event agenda here and make sure to register if you want to partipate!\n\nWhat is the Solidity Summit?\n\nThe Solidity Summit is a...","url":"/blog/2020/04/17/Solidity-Summit-2020-Goes-Interspace"},{"frontmatter":{"layout":"post","published":true,"title":"Solidity 0.6.6 Release Announcement","date":"2020-04-09","author":"Solidity Team","category":"Releases"},"content":"\nThis is a small bugfix release that solves an issue with certain tuple assignments.\n\nImportant Bugfixes:\n\nFix tuple assignments with components occupying multiple stack slots and different stack size on left- and right-hand-side.\n\nBugfixes:\n\nAST export: Export immutable property in the field mutability.\nSMTChecker: Fix internal error in the CHC engine when calling inherited functions internally.\nType Checker: Error when trying to encode functions with call options gas and value set.\n\nA big thank you to all contributors who helped make this release possible!\n\nDownload the new version...","url":"/blog/2020/04/09/solidity-0.6.6-release-announcement"}],"page":8,"totalPages":16},"__N_SSG":true}