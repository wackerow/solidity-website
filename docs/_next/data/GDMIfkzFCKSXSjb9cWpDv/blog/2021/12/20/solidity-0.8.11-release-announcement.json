{"pageProps":{"frontmatter":{"layout":"post","published":true,"title":"Solidity 0.8.11 Release Announcement","date":"2021-12-20","author":"Solidity Team","category":"Releases"},"content":"\n[Solidity v0.8.11](https://github.com/ethereum/solidity/releases/tag/v0.8.11)\nadds a first implementation of a Language Server, allows a safer way to\nperform ABI-encoding and fixes several bugs.\n\n## Notable New Features\n\n### Language Server Preview\n\n[Language Server Protocol](https://microsoft.github.io/language-server-protocol/)\nis an initiative that allows better interoperability between IDEs and\ncompilers, or more generally, language diagnostics tools. The idea is that\ninstead of writing a different plugin for each combination of IDEs and\nlanguages, every IDE implements a single client and every compiler implements\na single server and since both of them use the same protocol, you can combine\nall of them with each other.\n\nSolidity 0.8.11 contains a first release of an integrated language server,\nwhich means every IDE that has Language Server support will support Solidity\nout of the box.\n\nSince we first want to focus on getting the interface right, this release\ncontains a minimal set of features: It can only report errors and warnings.\n\nHaving said that, we expect future features to be finished quickly. In the first\nquarter of 2022 we expect to add \"jump to definition\", \"rename\", \"find all references\",\n\"show documentation on hover\", \"semantic highlighting\" and more.\n\nUnfortunately, one feature that will take more effort is likely the one you were\nlooking forward to the most: autocomplete. This feature is more complicated because\nautocomplete requires the compiler to perform symbol lookup and type resolution\ninside broken (because it is incomplete) code. We have a prototype that can handle\nincomplete code, but we do not yet know how useful it is.\n\n#### How to Use the LSP\n\nHow to hook your IDE up with the Solidity LSP depends on your IDE.\nThe LSP is currently only implemented for the native binary of Solidity (i.e. it does not\nwork if you install Solidity via javascript / npm). You need to download\nthe binary and provide the path to your IDE, plus the option `--lsp`.\n\n**QtCreator:** Choose Tools → Options → Language Client. Click on \"Add\" and\nprovide the path to the solc executable and `--lsp` as options.\n\n**vim / neovim:** You need the `coc` plugin and add the following to the\n`coc-settings.json` file:\n\n```\n{\n    // ...\n    \"languageserver\": {\n        // ...\n        \"solidity\": {\n            \"command\": \"/path/to/solc\",\n            \"args\": [ \"--lsp\" ],\n            \"rootPatterns\": [\".git/\"],\n            \"filetypes\": [\"solidity\"]\n        }\n    }\n}\n```\n\n**VSCode:** Ironically, the IDE that started the LSP project does not\nhave a generic plugin that can be combined with an arbitrary language\nserver. We expect LSP functionality to be added to the existing Solidity\nplugins for VSCode soon. Until then, you can try out the\n[plugin created by Christian Parpart](https://dev.to/christianparpart/builtin-solidity-language-server-267n) to showcase our LSP.\n\n#### Please Provide Feedback!\n\nWe are happy to ship this first preview of the Solidity Language Server and\nare curious to hear your thoughts on it. Please let us know what you think!\n\n- Which of the future features would you find most important?\n- Does the LSP work for you?\n- Is it easy to install?\n- Are you working on a plugin or an IDE that would profit from the Language Server?\n\nYou can get in touch with us via [Matrix](https://matrix.to/#/#ethereum_solidity:gitter.im) or one of\nthe other ways linked in our [readme header](https://github.com/ethereum/solidity#readme).\n\n### `abi.encodeCall`\n\nIt is a common pattern to use `abi.encodeWithSelector` to create the\ncall data for a funciton call which is then performed only later on,\nfor example in multi-signature wallets or more complex delegate contracts.\n\nThe problem with `abi.encodeWithSelector` is that the compiler does not\ncheck whether the supplied values actually match the types expected by the\ncalled function.\n\nBecause of that, we added `abi.encodeCall` which is similar to\n`abi.encodeWithSelector`, just that it does perform these type checks:\n\n`abi.encodeCall(contractName.functionName, (arg1, arg2, arg3))` is the same as\n`abi.encodeWithSelector(contractName.functionName.selector, arg1, arg2, arg3)`,\nwith the difference that the compiler checks that the types of `arg1`, `arg2`, `arg3`\nare compatible with a call of the form `contractName.functionName(arg1, arg2, arg3)`.\n\n## Full Changelog\n\n**Language Features:**\n\n- General: New builtin function `abi.encodeCall(functionPointer, (arg1, arg2, ...))` that type-checks the arguments and returns the ABI-encoded function call data.\n\n**Compiler Features:**\n\n- Commandline Interface: Add `--lsp` option to get `solc` to act as a Language Server (LSP) communicating over stdio.\n\n**Bugfixes:**\n\n- Code Generator: Fix a crash when using `@use-src` and compiling from Yul to ewasm.\n- SMTChecker: Fix internal error when an unsafe target is solved more than once and the counterexample messages are different.\n- SMTChecker: Fix soundness of assigned storage/memory local pointers that were not erasing enough knowledge.\n- Fix internal error when a function has a calldata struct argument with an internal type inside.\n- IR Generator: Fix IR syntax error when copying storage arrays of functions.\n\nA big thank you to all contributors who helped make this release possible!\n\nDownload the new version of Solidity [here](https://github.com/ethereum/solidity/releases/tag/v0.8.11).\n","availableURLs":["/2023/05/10/solidity-0.8.20-release-announcement","/2023/03/10/solidity-developer-survey-2022-results","/2023/02/22/user-defined-operators","/2023/02/22/solidity-0.8.19-release-announcement","/2023/02/01/solidity-0.8.18-release-announcement","/2022/12/07/solidity-developer-survey-2022-announcement","/2022/12/05/solidity-core-team-updates","/2022/09/08/storage-write-removal-before-conditional-termination","/2022/09/08/solidity-0.8.17-release-announcement","/2022/08/08/solidity-0.8.16-release-announcement","/2022/08/08/calldata-tuple-reencoding-head-overflow-bug","/2022/06/15/solidity-0.8.15-release-announcement","/2022/06/15/inline-assembly-memory-side-effects-bug","/2022/06/15/dirty-bytes-array-to-storage-bug","/2022/05/17/solidity-0.8.14-release-announcement","/2022/05/17/data-location-inheritance-bug","/2022/05/17/calldata-reencode-size-check-bug","/2022/05/03/solidity-summit-2022-recap","/2022/04/08/announcing-the-underhanded-contest-winners-2022","/2022/03/16/solidity-0.8.13-release-announcement","/2022/03/16/encodecall-bug","/2022/02/22/solidity-summit-2022-announcement","/2022/02/16/solidity-0.8.12-release-announcement","/2022/02/09/underhanded-solidity-contest-2022-announcement","/2022/02/07/solidity-developer-survey-2021-results","/2021/12/20/solidity-0.8.11-release-announcement","/2021/11/18/solidity-developer-survey-2021","/2021/11/09/solidity-0.8.10-release-announcement","/2021/09/29/user-defined-value-types-bug","/2021/09/29/solidity-0.8.9-release-announcement","/2021/09/29/signed-immutables-bug","/2021/09/27/user-defined-value-types","/2021/09/27/solidity-0.8.8-release-announcement","/2021/08/11/solidity-0.8.7-release-announcement","/2021/06/22/solidity-0.8.6-release-announcement","/2021/06/10/solidity-0.8.5-release-announcement","/2021/05/03/soliditylangorg-umbrella-domain","/2021/04/21/solidity-0.8.4-release-announcement","/2021/04/21/decoding-from-memory-bug","/2021/04/21/custom-errors","/2021/04/01/announcing-solidity-collectibles","/2021/03/23/solidity-0.8.3-release-announcement","/2021/03/23/keccak-optimizer-bug","/2021/03/02/solidity-0.8.2-release-announcement","/2021/03/02/saving-gas-with-simple-inliner","/2021/02/15/contributing-to-solidity-101","/2021/02/10/an-introduction-to-soliditys-fuzz-testing-approach","/2021/02/01/launching-the-solidity-forum","/2021/01/27/solidity-0.8.1-release-announcement","/2021/01/26/solidity-developer-survey-2020-results","/2020/12/16/solidity-v0.8.0-release-announcement","/2020/12/16/solidity-0.7.6-release-announcement","/2020/12/09/solidity-developer-survey-2020","/2020/12/03/solidity-underhanded-contest-winners","/2020/11/18/solidity-0.7.5-release-announcement","/2020/11/04/solidity-ama-1-recap","/2020/10/28/solidity-0.8.x-preview","/2020/10/19/solidity-0.7.4-release-announcement","/2020/10/19/empty-byte-array-copy-bug","/2020/10/07/solidity-dynamic-array-cleanup-bug","/2020/10/07/solidity-0.7.3-release-announcement","/2020/09/28/solidity-0.7.2-release-announcement","/2020/09/21/solidity-underhanded-contest","/2020/09/18/meet-the-team","/2020/09/02/solidity-0.7.1-release-announcement","/2020/07/28/solidity-v0.7.0-release-announcement","/2020/07/22/Solidity-0612-release-announcement","/2020/07/08/solidity-turns-5","/2020/07/07/Solidity-0611-release-announcement","/2020/06/25/sourcify-faq","/2020/06/18/solidity-0.6-inheritance","/2020/06/11/Solidity-0610-release-announcement","/2020/06/09/solidity-summit-recap","/2020/06/05/Solidity-069-release-announcement","/2020/06/02/Sourcify-Towards-Safer-Contract-Interaction-for-Humans","/2020/05/26/array-slices","/2020/05/14/Solidity-068-release-announcement","/2020/05/13/immutable-keyword","/2020/05/04/solidity-0.6.7-release-announcement","/2020/04/17/Solidity-Summit-2020-Goes-Interspace","/2020/04/09/solidity-0.6.6-release-announcement","/2020/04/06/solidity-0.6.5-release-announcement","/2020/04/06/memory-creation-overflow-bug","/2020/03/23/fallback-receive-split","/2020/03/17/solidity-0.5.17-release-announcement","/2020/03/10/solidity-0.6.4-release-announcement","/2020/02/18/solidity-0.6.3-release-announcement","/2020/01/29/solidity-0.6-try-catch","/2020/01/27/solidity-0.6.2-release-announcement","/2020/01/02/solidity-0.6.1-release-announcement","/2020/01/02/solidity-0.5.16-release-announcement","/2019/12/17/solidity-0.6.0-release-announcement","/2019/12/17/solidity-0.5.15-release-announcement","/2019/12/09/solidity-0.5.14-release-announcement","/2019/11/14/solidity-0.5.13-release-announcement","/2019/10/01/solidity-0.5.12-release-announcement","/2019/08/12/solidity-0.5.11-release-announcement","/2019/06/25/solidity-storage-array-bugs","/2019/06/25/solidity-0.5.10-release-announcement","/2019/05/28/solidity-0.5.9-release-announcement","/2019/04/30/solidity-0.5.8-release-announcement","/2019/04/29/solidity-0.4.26-release-announcement","/2019/03/26/solidity-optimizer-and-abiencoderv2-bug","/2019/03/26/solidity-0.5.7-release-announcement","/2019/03/13/solidity-0.5.6-release-announcement","/2019/03/05/solidity-0.5.5-release-announcement","/2019/02/12/solidity-0.5.4-release-announcement","/2019/01/22/solidity-0.5.3-release-announcement","/2018/12/19/solidity-0.5.2-release-announcement","/2018/12/03/solidity-0.5.1-release-announcement","/2018/11/13/solidity-0.5.0-release-announcement","/2018/09/13/solidity-bugfix-release","/2018/09/13/solidity-0.4.25-release-announcement","/2018/05/16/solidity-0.4.24-release-announcement","/2018/04/19/solidity-0.4.23-release-announcement","/2018/04/17/solidity-0.4.22-release-announcement","/2018/03/08/solidity-0.4.21-release-announcement","/2018/02/14/solidity-0.4.20-release-announcement","/2017/11/30/solidity-0.4.19-release-announcement","/2017/10/18/solidity-0.4.18-release-announcement","/2017/09/21/solidity-0.4.17-release-announcement","/2017/08/24/solidity-0.4.16-release-announcement","/2017/08/08/solidity-0.4.15-release-announcement","/2017/07/31/solidity-0.4.14-release-announcement","/2017/07/06/solidity-0.4.13-release-announcement","/2017/07/03/solidity-0.4.12-release-announcement","/2017/05/03/solidity-optimizer-bug","/2017/05/03/solidity-0.4.11-release-announcement","/2017/03/15/solidity-0.4.10-release-announcement","/2017/01/31/solidity-0.4.9-release-announcement","/2017/01/13/solidity-0.4.8-release-announcement","/2016/12/15/solidity-0.4.7-release-announcement","/2016/11/22/solidity-0.4.6-release-announcement","/2016/11/21/solidity-0.4.5-release-announcement","/2016/11/09/analysis-storage-corruption-bug","/2016/11/01/solidity-0.4.4-release-announcement","/2016/11/01/security-alert-solidity-variables-can-overwritten-storage","/2016/10/25/solidity-0.4.3-release-announcement","/2016/09/17/solidity-0.4.2-release-announcement","/2016/09/09/solidity-0.4.1-release-announcement","/2016/09/08/solidity-0.4.0-release-announcement","/2016/09/01/formal-methods-roadmap","/2016/08/10/solidity-0.3.6-release-announcement","/2016/06/10/solidity-0.3.5-release-announcement","/2016/06/10/smart-contract-security","/2016/05/31/solidity-0.3.4-release-announcement","/2016/05/27/solidity-0.3.3-release-announcement","/2016/04/18/solidity-0.3.2-release-announcement","/2016/03/31/solidity-0.3.1-release-announcement","/2016/03/11/solidity-0.3.0-release-announcement","/2016/02/17/solidity-0.2.2-release-announcement","/2016/01/30/solidity-0.2.1-release-announcement","/2015/12/01/solidity-0.2.0-release-announcement","/2015/11/17/solidity-0.1.7-release-announcement","/2015/10/16/solidity-0.1.6-release-announcement","/2015/10/07/solidity-0.1.5-release-announcement","/2015/09/30/solidity-0.1.4-release-announcement","/2015/09/22/solidity-0.1.3-release-announcement","/2015/08/21/solidity-0.1.2-release-announcement"]},"__N_SSG":true}